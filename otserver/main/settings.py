"""
Django settings for main project.

Generated by 'django-admin startproject' using Django 5.2.5.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
import environ
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-wju_hw5c8h#=fj6l!ywm0kzrbx$@=vr#_)5h8&m-4qcf$1m0^a'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False
DATABASE_ROUTERS = ["pages.dbrouters.OTServRouter"]
ALLOWED_HOSTS = ["127.0.0.1", "retrowarot.com", "www.retrowarot.com"]
CSRF_TRUSTED_ORIGINS = ["https://retrowarot.com", "https://www.retrowarot.com"]
SECURE_SSL_REDIRECT = False  # weâ€™ll enable later

BAZAAR_FEE_BPS = 100                # 1% fee
BAZAAR_FEE_ACCOUNT_ID = 1           # treasury OT account_id to receive fees


# Load environment variables
env = environ.Env(
    SHOP_ENABLED=(bool, True),
    QUICKLOGIN_SHOWBOX_ENABLED=(bool, True),
    GALLERY_SHOWBOX_ENABLED=(bool, True),
    SERVERINFO_SHOWBOX_ENABLED=(bool, True),
    CHARMARKET_SHOWBOX_ENABLED=(bool, True),
    POWERGAMERS_SHOWBOX_ENABLED=(bool, True),
    ONLINERANKING_SHOWBOX_ENABLED=(bool, True),
    DISCORDWIDGET_ENABLED=(bool, True),
)
environ.Env.read_env(BASE_DIR / ".env")

SHOP_ENABLED = env.bool("SHOP_ENABLED")
QUICKLOGIN_SHOWBOX_ENABLED = env.bool("QUICKLOGIN_SHOWBOX_ENABLED", default=True)
GALLERY_SHOWBOX_ENABLED = env.bool("GALLERY_SHOWBOX_ENABLED")
SERVERINFO_SHOWBOX_ENABLED = env.bool("SERVERINFO_SHOWBOX_ENABLED")
CHARMARKET_SHOWBOX_ENABLED = env.bool("CHARMARKET_SHOWBOX_ENABLED")
POWERGAMERS_SHOWBOX_ENABLED = env.bool("POWERGAMERS_SHOWBOX_ENABLED")
ONLINERANKING_SHOWBOX_ENABLED = env.bool("ONLINERANKING_SHOWBOX_ENABLED")
DISCORDWIDGET_ENABLED = env.bool("DISCORDWIDGET_ENABLED")
OT_DB_ALIAS = env("DB_NAME")

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'pages',
    "tinymce",
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'main.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'core.context_processors.feature_flags',
                'core.context_processors.public_gallery',
            ],
        },
    },
]

WSGI_APPLICATION = 'main.wsgi.application'

# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

# Use environment variables for database configuration
DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.mysql",
        "NAME": env("DB_NAME"),
        "USER": env("DB_USER"),
        "PASSWORD": env("DB_PASSWORD"),
        "HOST": env("DB_HOST", default="127.0.0.1"),
        "PORT": env("DB_PORT", default="3306"),
        "OPTIONS": {
            "charset": "utf8mb4",
            # Keeps Django strict about invalid data; good default for MySQL
            "init_command": "SET sql_mode='STRICT_TRANS_TABLES'",
        },
    },
    "retrowar": {
        "ENGINE": "django.db.backends.mysql",
        "NAME": env("DB_NAME"),
        "USER": env("DB_USER"),
        "PASSWORD": env("DB_PASSWORD"),
        "HOST": env("DB_HOST", default="127.0.0.1"),
        "PORT": env("DB_PORT", default="3306"),
        "OPTIONS": {
            "charset": "utf8mb4",
            # Keeps Django strict about invalid data; good default for MySQL
            "init_command": "SET sql_mode='STRICT_TRANS_TABLES'",
        },
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'
BASE_DIR = Path(__file__).resolve().parent.parent
STATICFILES_DIRS = [BASE_DIR / 'static']

STATIC_ROOT = BASE_DIR / 'static_collected'   # <-- add this


TEMPLATES[0]["DIRS"] = [BASE_DIR / "templates"]
TEMPLATES[0]["APP_DIRS"] = True
LOGIN_URL = "login"
LOGIN_REDIRECT_URL = "home"     # after successful login
LOGOUT_REDIRECT_URL = "home"    # after logout

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# OT status query (ProtocolStatus::sendStatusString)
OT_STATUS_HOST = "127.0.0.1"   # your game server IP
OT_STATUS_PORT = 7171          # your status/listen port
OT_STATUS_TIMEOUT = 3.0        # seconds
OT_STATUS_MIN_INTERVAL = 15
OT_STATUS_RETRIES = 1
OT_STATUS_RETRY_DELAY = 1.0

# Map to your schema (adjust if your accounts table differs)
OT_PASSWORD_TYPE = "sha1"           # or "plain", "md5", "sha256"
OT_ACCOUNT_TABLE = "accounts"
OT_USERNAME_COL  = "id"
OT_PASSWORD_COL  = "password"
OT_EMAIL_COL     = "email"
OT_BLOCKED_COL   = "blocked"        # if you have it; else set to a non-existent col string

AUTHENTICATION_BACKENDS = [
    "pages.auth_backends.OTAccountBackend",        # our custom OT backend
    #"django.contrib.auth.backends.ModelBackend",   # keep Django's default
]

EMAIL_BACKEND = os.getenv("EMAIL_BACKEND",
    "pages.mail_backends.GraphEmailBackend")
GRAPH_TENANT_ID     = os.getenv("GRAPH_TENANT_ID")
GRAPH_CLIENT_ID     = os.getenv("GRAPH_CLIENT_ID")
GRAPH_CLIENT_SECRET = os.getenv("GRAPH_CLIENT_SECRET")
GRAPH_SENDER        = os.getenv("GRAPH_SENDER", "no-reply@retrowarot.com")

DEFAULT_FROM_EMAIL = os.getenv(
    "DEFAULT_FROM_EMAIL", "Retrowar OT <no-reply@retrowarot.com>"
)
SUPPORT_EMAIL = os.getenv("SUPPORT_EMAIL", "support@retrowarot.com")
# If you use django-allauth etc.:
ACCOUNT_EMAIL_REQUIRED = True
ACCOUNT_EMAIL_VERIFICATION = "mandatory"

# (Optional) tiny logger so you see status codes
LOGGING = {
    "version": 1,
    "disable_existing_loggers": False,
    "handlers": {"console": {"class": "logging.StreamHandler"}},
    "loggers": {
        "pages.mail_backends": {"handlers": ["console"], "level": "INFO"},
    },
}

# ---- Stripe ----
STRIPE_API_KEY       = os.getenv("STRIPE_API_KEY")           # secret key
STRIPE_PUBLIC_KEY    = os.getenv("STRIPE_PUBLIC_KEY")        # publishable
STRIPE_WEBHOOK_SECRET= os.getenv("STRIPE_WEBHOOK_SECRET")    # optional but recommended
STRIPE_PIX_ENABLED   = os.getenv("STRIPE_PIX_ENABLED","0") == "1"  # requires BR Stripe account

# Map your Stripe Price IDs per pack/currency (already referenced in the view via env)
# Example (place into your environment):
# STRIPE_PRICE_USD_C250=price_123 ...
# STRIPE_PRICE_BRL_C250=price_abc ...

# ---- PayPal ----
PAYPAL_CLIENT_ID = os.getenv("PAYPAL_CLIENT_ID")
PAYPAL_SECRET    = os.getenv("PAYPAL_SECRET")
PAYPAL_ENV       = os.getenv("PAYPAL_ENV", "sandbox")  # "sandbox" or "live"

# ---- PIX (manual fallback) ----
PIX_KEY      = os.getenv("PIX_KEY")        # your Pix key (email/phone/EVP)
PIX_QR_IMAGE = os.getenv("PIX_QR_IMAGE")   # URL/path to static QR image (optional)

# ---- Optional site name (used in PayPal context)
SITE_NAME = os.getenv("SITE_NAME", "Retrowar")


TINYMCE_DEFAULT_CONFIG = {
    "height": 400,
    "menubar": True,
    "plugins": "advlist autolink lists link image charmap preview anchor "
               "searchreplace visualblocks code fullscreen "
               "insertdatetime media table code help wordcount",
    "toolbar": "undo redo | blocks | bold italic underline | "
               "alignleft aligncenter alignright alignjustify | "
               "bullist numlist outdent indent | link image media | code | help",
}

# OT players table + key columns
OT_PLAYERS_TABLE       = os.getenv("OT_PLAYERS_TABLE", "players")
OT_PLAYERS_ACCOUNT_COL = os.getenv("OT_PLAYERS_ACCOUNT_COL", "account_id")
OT_DEFAULT_TOWN_ID     = int(os.getenv("OT_DEFAULT_TOWN_ID", 11)) # Rookgaard
OT_START_LEVEL         = int(os.getenv("OT_START_LEVEL", 1))   # tweak for your world
OT_START_HEALTH        = int(os.getenv("OT_START_HEALTH", 150))
OT_START_MANA          = int(os.getenv("OT_START_MANA", 0))
OT_START_CAP           = int(os.getenv("OT_START_CAP", 400))
OT_START_MAGLEVEL      = int(os.getenv("OT_START_MAGLEVEL", 0))
OT_START_SOUL          = int(os.getenv("OT_START_SOUL", 100))
OT_START_POSX          = int(os.getenv("OT_START_POSX", 32097))    # 0/0/0 lets TFS town spawn handle it, if supported
OT_START_POSY          = int(os.getenv("OT_START_POSY", 32219))
OT_START_POSZ          = int(os.getenv("OT_START_POSZ", 7))
OT_START_LOOKTYPE_MALE      = int(os.getenv("OT_START_LOOKTYPE", 128))
OT_START_LOOKTYPE_FEMALE    = int(os.getenv("OT_START_LOOKTYPE", 136))
OT_START_LOOKHEAD      = int(os.getenv("OT_START_LOOKHEAD", 78))
OT_START_LOOKBODY      = int(os.getenv("OT_START_LOOKBODY", 88))
OT_START_LOOKLEGS      = int(os.getenv("OT_START_LOOKLEGS", 58))
OT_START_LOOKFEET      = int(os.getenv("OT_START_LOOKFEET", 0))