# Generated by Django 5.1.2 on 2025-08-22 02:52

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('pages', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AccountBanHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reason', models.CharField(max_length=255)),
                ('banned_at', models.BigIntegerField()),
                ('expired_at', models.BigIntegerField()),
            ],
            options={
                'db_table': 'account_ban_history',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Accounts',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('password', models.CharField(max_length=40)),
                ('type', models.IntegerField()),
                ('premdays', models.IntegerField()),
                ('lastday', models.PositiveIntegerField()),
                ('pubkey', models.CharField(max_length=255)),
                ('privatekey', models.CharField(max_length=255)),
                ('email', models.CharField(max_length=255)),
                ('created', models.IntegerField()),
                ('rlname', models.CharField(max_length=255)),
                ('location', models.CharField(max_length=255)),
                ('country', models.CharField(max_length=3)),
                ('web_lastlogin', models.IntegerField()),
                ('web_flags', models.IntegerField()),
                ('email_hash', models.CharField(max_length=32)),
                ('email_new', models.CharField(max_length=255)),
                ('email_new_time', models.IntegerField()),
                ('email_code', models.CharField(max_length=255)),
                ('email_next', models.IntegerField()),
                ('premium_points', models.IntegerField()),
                ('email_verified', models.IntegerField()),
                ('key', models.CharField(max_length=64)),
                ('coins', models.IntegerField()),
            ],
            options={
                'db_table': 'accounts',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountViplist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('account_id', models.IntegerField(db_comment='id of account whose viplist entry it is')),
                ('player_id', models.IntegerField(db_comment='id of target player of viplist entry')),
                ('description', models.CharField(max_length=128)),
                ('icon', models.PositiveIntegerField()),
                ('notify', models.IntegerField()),
            ],
            options={
                'db_table': 'account_viplist',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.IntegerField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.IntegerField()),
                ('is_active', models.IntegerField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CharMarket',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('char_id', models.IntegerField()),
                ('auction_start', models.IntegerField()),
                ('auction_end', models.IntegerField()),
                ('current_bid', models.IntegerField()),
                ('highest_bid_acc', models.IntegerField()),
                ('seller_account', models.IntegerField()),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'char_market',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.PositiveSmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GuildInvites',
            fields=[
                ('player_id', models.IntegerField(primary_key=True, serialize=False)),
                ('guild_id', models.IntegerField()),
            ],
            options={
                'db_table': 'guild_invites',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GuildMembership',
            fields=[
                ('player_id', models.IntegerField(primary_key=True, serialize=False)),
                ('guild_id', models.IntegerField()),
                ('rank_id', models.IntegerField()),
                ('nick', models.CharField(max_length=15)),
            ],
            options={
                'db_table': 'guild_membership',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GuildRanks',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('guild_id', models.IntegerField(db_comment='guild')),
                ('name', models.CharField(db_comment='rank name', max_length=255)),
                ('level', models.IntegerField(db_comment='rank level - leader, vice, member, maybe something else')),
            ],
            options={
                'db_table': 'guild_ranks',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Guilds',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('creationdata', models.IntegerField()),
                ('motd', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('logo_name', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'guilds',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GuildwarKills',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('killer', models.CharField(max_length=50)),
                ('target', models.CharField(max_length=50)),
                ('killerguild', models.IntegerField()),
                ('targetguild', models.IntegerField()),
                ('warid', models.IntegerField()),
                ('time', models.BigIntegerField()),
            ],
            options={
                'db_table': 'guildwar_kills',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GuildWars',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('guild1', models.IntegerField()),
                ('guild2', models.IntegerField()),
                ('name1', models.CharField(max_length=255)),
                ('name2', models.CharField(max_length=255)),
                ('status', models.IntegerField()),
                ('started', models.BigIntegerField()),
                ('ended', models.BigIntegerField()),
            ],
            options={
                'db_table': 'guild_wars',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='HouseLists',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('house_id', models.IntegerField()),
                ('listid', models.IntegerField()),
                ('list', models.TextField()),
            ],
            options={
                'db_table': 'house_lists',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Houses',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('owner', models.IntegerField()),
                ('paid', models.PositiveIntegerField()),
                ('warnings', models.IntegerField()),
                ('name', models.CharField(max_length=255)),
                ('rent', models.IntegerField()),
                ('town_id', models.IntegerField()),
                ('bid', models.IntegerField()),
                ('bid_end', models.IntegerField()),
                ('last_bid', models.IntegerField()),
                ('highest_bidder', models.IntegerField()),
                ('size', models.IntegerField()),
                ('beds', models.IntegerField()),
            ],
            options={
                'db_table': 'houses',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IpBans',
            fields=[
                ('ip', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('reason', models.CharField(max_length=255)),
                ('banned_at', models.BigIntegerField()),
                ('expires_at', models.BigIntegerField()),
                ('banned_by', models.IntegerField()),
            ],
            options={
                'db_table': 'ip_bans',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MyaacAccountActions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('account_id', models.IntegerField()),
                ('ip', models.PositiveIntegerField()),
                ('ipv6', models.CharField(max_length=16)),
                ('date', models.IntegerField()),
                ('action', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'myaac_account_actions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MyaacAdminMenu',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('page', models.CharField(max_length=255)),
                ('ordering', models.IntegerField()),
                ('flags', models.IntegerField()),
                ('enabled', models.IntegerField()),
            ],
            options={
                'db_table': 'myaac_admin_menu',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MyaacBugtracker',
            fields=[
                ('account', models.CharField(max_length=255)),
                ('type', models.IntegerField()),
                ('status', models.IntegerField()),
                ('text', models.TextField()),
                ('id', models.IntegerField()),
                ('subject', models.CharField(max_length=255)),
                ('reply', models.IntegerField()),
                ('who', models.IntegerField()),
                ('uid', models.AutoField(primary_key=True, serialize=False)),
                ('tag', models.IntegerField()),
            ],
            options={
                'db_table': 'myaac_bugtracker',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MyaacChangelog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('body', models.CharField(max_length=500)),
                ('type', models.IntegerField(db_comment='1 - added, 2 - removed, 3 - changed, 4 - fixed')),
                ('where', models.IntegerField(db_comment='1 - server, 2 - site')),
                ('date', models.IntegerField()),
                ('player_id', models.IntegerField()),
                ('hidden', models.IntegerField()),
            ],
            options={
                'db_table': 'myaac_changelog',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MyaacConfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, unique=True)),
                ('value', models.CharField(max_length=1000)),
            ],
            options={
                'db_table': 'myaac_config',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MyaacFaq',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.CharField(max_length=255)),
                ('answer', models.CharField(max_length=1020)),
                ('ordering', models.IntegerField()),
                ('hidden', models.IntegerField()),
            ],
            options={
                'db_table': 'myaac_faq',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MyaacForum',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_post', models.IntegerField()),
                ('last_post', models.IntegerField()),
                ('section', models.IntegerField()),
                ('replies', models.IntegerField()),
                ('views', models.IntegerField()),
                ('author_aid', models.IntegerField()),
                ('author_guid', models.IntegerField()),
                ('post_text', models.TextField()),
                ('post_topic', models.CharField(max_length=255)),
                ('post_smile', models.IntegerField()),
                ('post_html', models.IntegerField()),
                ('post_date', models.IntegerField()),
                ('last_edit_aid', models.IntegerField()),
                ('edit_date', models.IntegerField()),
                ('post_ip', models.CharField(max_length=32)),
                ('sticked', models.IntegerField()),
                ('closed', models.IntegerField()),
            ],
            options={
                'db_table': 'myaac_forum',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MyaacForumBoards',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32)),
                ('description', models.CharField(max_length=255)),
                ('ordering', models.IntegerField()),
                ('guild', models.IntegerField()),
                ('access', models.IntegerField()),
                ('closed', models.IntegerField()),
                ('hidden', models.IntegerField()),
            ],
            options={
                'db_table': 'myaac_forum_boards',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MyaacGallery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.CharField(max_length=255)),
                ('image', models.CharField(max_length=255)),
                ('thumb', models.CharField(max_length=255)),
                ('author', models.CharField(max_length=50)),
                ('ordering', models.IntegerField()),
                ('hidden', models.IntegerField()),
            ],
            options={
                'db_table': 'myaac_gallery',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MyaacMenu',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('template', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('link', models.CharField(max_length=255)),
                ('blank', models.IntegerField()),
                ('color', models.CharField(max_length=6)),
                ('category', models.IntegerField()),
                ('ordering', models.IntegerField()),
                ('enabled', models.IntegerField()),
            ],
            options={
                'db_table': 'myaac_menu',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MyaacMonsters',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hidden', models.IntegerField()),
                ('name', models.CharField(max_length=255)),
                ('mana', models.IntegerField()),
                ('exp', models.IntegerField()),
                ('health', models.IntegerField()),
                ('speed_lvl', models.IntegerField()),
                ('use_haste', models.IntegerField()),
                ('voices', models.TextField()),
                ('immunities', models.CharField(max_length=255)),
                ('summonable', models.IntegerField()),
                ('convinceable', models.IntegerField()),
                ('race', models.CharField(max_length=255)),
                ('loot', models.TextField()),
            ],
            options={
                'db_table': 'myaac_monsters',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MyaacNews',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('body', models.TextField()),
                ('type', models.IntegerField(db_comment='1 - news, 2 - ticker, 3 - article')),
                ('date', models.IntegerField()),
                ('category', models.IntegerField()),
                ('player_id', models.IntegerField()),
                ('last_modified_by', models.IntegerField()),
                ('last_modified_date', models.IntegerField()),
                ('comments', models.CharField(max_length=50)),
                ('article_text', models.CharField(max_length=300)),
                ('article_image', models.CharField(max_length=100)),
                ('hidden', models.IntegerField()),
            ],
            options={
                'db_table': 'myaac_news',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MyaacNewsCategories',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('description', models.CharField(max_length=50)),
                ('icon_id', models.IntegerField()),
                ('hidden', models.IntegerField()),
            ],
            options={
                'db_table': 'myaac_news_categories',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MyaacNotepad',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('account_id', models.IntegerField()),
                ('content', models.TextField()),
            ],
            options={
                'db_table': 'myaac_notepad',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MyaacPages',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, unique=True)),
                ('title', models.CharField(max_length=30)),
                ('body', models.TextField()),
                ('date', models.IntegerField()),
                ('player_id', models.IntegerField()),
                ('php', models.IntegerField(db_comment='0 - plain html, 1 - php')),
                ('enable_tinymce', models.IntegerField(db_comment='1 - enabled, 0 - disabled')),
                ('access', models.IntegerField()),
                ('hidden', models.IntegerField()),
            ],
            options={
                'db_table': 'myaac_pages',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MyaacSpells',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('spell', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255, unique=True)),
                ('words', models.CharField(max_length=255)),
                ('category', models.IntegerField(db_comment='1 - attack, 2 - healing, 3 - summon, 4 - supply, 5 - support')),
                ('type', models.IntegerField(db_comment='1 - instant, 2 - conjure, 3 - rune')),
                ('level', models.IntegerField()),
                ('maglevel', models.IntegerField()),
                ('mana', models.IntegerField()),
                ('soul', models.IntegerField()),
                ('conjure_id', models.IntegerField()),
                ('conjure_count', models.IntegerField()),
                ('reagent', models.IntegerField()),
                ('item_id', models.IntegerField()),
                ('premium', models.IntegerField()),
                ('vocations', models.CharField(max_length=100)),
                ('hidden', models.IntegerField()),
            ],
            options={
                'db_table': 'myaac_spells',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MyaacVideos',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('youtube_id', models.CharField(max_length=20)),
                ('author', models.CharField(max_length=50)),
                ('ordering', models.IntegerField()),
                ('hidden', models.IntegerField()),
            ],
            options={
                'db_table': 'myaac_videos',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MyaacVisitors',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip', models.CharField(max_length=45, unique=True)),
                ('lastvisit', models.IntegerField()),
                ('page', models.CharField(max_length=2048)),
            ],
            options={
                'db_table': 'myaac_visitors',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MyaacWeapons',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('level', models.IntegerField()),
                ('maglevel', models.IntegerField()),
                ('vocations', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'myaac_weapons',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PagesProfile',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('ot_account_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'pages_profile',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PlayerDeaths',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('player_id', models.IntegerField()),
                ('time', models.PositiveBigIntegerField()),
                ('level', models.IntegerField()),
                ('killed_by', models.CharField(max_length=255)),
                ('is_player', models.IntegerField()),
                ('mostdamage_by', models.CharField(max_length=100)),
                ('mostdamage_is_player', models.IntegerField()),
                ('unjustified', models.IntegerField()),
                ('mostdamage_unjustified', models.IntegerField()),
            ],
            options={
                'db_table': 'player_deaths',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PlayerDepotitems',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('player_id', models.IntegerField()),
                ('sid', models.IntegerField(db_comment='any given range eg 0-100 will be reserved for depot lockers and all > 100 will be then normal items inside depots')),
                ('pid', models.IntegerField()),
                ('itemtype', models.SmallIntegerField()),
                ('count', models.SmallIntegerField()),
                ('attributes', models.TextField()),
                ('abilities', models.TextField()),
            ],
            options={
                'db_table': 'player_depotitems',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PlayerItems',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('player_id', models.IntegerField()),
                ('pid', models.IntegerField()),
                ('sid', models.IntegerField()),
                ('itemtype', models.SmallIntegerField()),
                ('count', models.SmallIntegerField()),
                ('attributes', models.TextField()),
                ('abilities', models.TextField()),
            ],
            options={
                'db_table': 'player_items',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PlayerMurders',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('player_id', models.IntegerField()),
                ('date', models.BigIntegerField()),
            ],
            options={
                'db_table': 'player_murders',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PlayerNamelocks',
            fields=[
                ('player_id', models.IntegerField(primary_key=True, serialize=False)),
                ('reason', models.CharField(max_length=255)),
                ('namelocked_at', models.BigIntegerField()),
                ('namelocked_by', models.IntegerField()),
            ],
            options={
                'db_table': 'player_namelocks',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Players',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('group_id', models.IntegerField()),
                ('account_id', models.IntegerField()),
                ('level', models.IntegerField()),
                ('goldenarena', models.IntegerField(db_column='goldenArena')),
                ('vocation', models.IntegerField()),
                ('health', models.IntegerField()),
                ('healthmax', models.IntegerField()),
                ('experience', models.BigIntegerField()),
                ('dailyexp', models.BigIntegerField(db_column='dailyExp')),
                ('weeklyexp', models.BigIntegerField(db_column='weeklyExp')),
                ('monthlyexp', models.BigIntegerField(db_column='monthlyExp')),
                ('lookbody', models.IntegerField()),
                ('lookfeet', models.IntegerField()),
                ('lookhead', models.IntegerField()),
                ('looklegs', models.IntegerField()),
                ('looktype', models.IntegerField()),
                ('lookaddons', models.IntegerField()),
                ('maglevel', models.IntegerField()),
                ('mana', models.IntegerField()),
                ('manamax', models.IntegerField()),
                ('manaspent', models.PositiveIntegerField()),
                ('soul', models.PositiveIntegerField()),
                ('town_id', models.IntegerField()),
                ('posx', models.IntegerField()),
                ('posy', models.IntegerField()),
                ('posz', models.IntegerField()),
                ('conditions', models.TextField()),
                ('cap', models.IntegerField()),
                ('sex', models.IntegerField()),
                ('lastlogin', models.PositiveBigIntegerField()),
                ('lastip', models.PositiveIntegerField()),
                ('save', models.IntegerField()),
                ('skull', models.IntegerField()),
                ('skulltime', models.IntegerField()),
                ('lastlogout', models.PositiveBigIntegerField()),
                ('blessings', models.IntegerField()),
                ('onlinetime', models.IntegerField()),
                ('deletion', models.BigIntegerField()),
                ('balance', models.PositiveBigIntegerField()),
                ('skill_fist', models.PositiveIntegerField()),
                ('skill_fist_tries', models.PositiveBigIntegerField()),
                ('skill_club', models.PositiveIntegerField()),
                ('skill_club_tries', models.PositiveBigIntegerField()),
                ('skill_sword', models.PositiveIntegerField()),
                ('skill_sword_tries', models.PositiveBigIntegerField()),
                ('skill_axe', models.PositiveIntegerField()),
                ('skill_axe_tries', models.PositiveBigIntegerField()),
                ('skill_dist', models.PositiveIntegerField()),
                ('skill_dist_tries', models.PositiveBigIntegerField()),
                ('skill_shielding', models.PositiveIntegerField()),
                ('skill_shielding_tries', models.PositiveBigIntegerField()),
                ('skill_fishing', models.PositiveIntegerField()),
                ('skill_fishing_tries', models.PositiveBigIntegerField()),
                ('deleted', models.IntegerField()),
                ('hwid', models.CharField(max_length=255)),
                ('created', models.IntegerField()),
                ('hidden', models.IntegerField()),
                ('comment', models.TextField()),
            ],
            options={
                'db_table': 'players',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PlayersOnline',
            fields=[
                ('player_id', models.IntegerField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'players_online',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PlayerSpells',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('player_id', models.IntegerField()),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'player_spells',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PlayerStorage',
            fields=[
                ('player_id', models.IntegerField(primary_key=True, serialize=False)),
                ('key', models.PositiveIntegerField()),
                ('value', models.IntegerField()),
            ],
            options={
                'db_table': 'player_storage',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ServerConfig',
            fields=[
                ('config', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('value', models.CharField(max_length=256)),
            ],
            options={
                'db_table': 'server_config',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TileStore',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('house_id', models.IntegerField()),
                ('data', models.TextField()),
                ('abilities', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'tile_store',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountBans',
            fields=[
                ('account', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='pages.accounts')),
                ('reason', models.CharField(max_length=255)),
                ('banned_at', models.BigIntegerField()),
                ('expires_at', models.BigIntegerField()),
            ],
            options={
                'db_table': 'account_bans',
                'managed': False,
            },
        ),
    ]
